plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'io.opentracing.contrib'
version = '0.1.3'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    api 'org.eclipse.microprofile.opentracing:microprofile-opentracing-api:1.1'

    implementation 'javax:javaee-api:7.0'
    implementation 'io.opentracing:opentracing-api:0.31.0'
    implementation 'io.opentracing.contrib:opentracing-tracerresolver:0.1.5'

    testCompile 'junit:junit:4.12'
    testImplementation 'io.opentracing:opentracing-mock:0.31.0'
    testImplementation 'org.apache.tomee:openejb-core:7.1.0'
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'OpenTracing Jakarta EE Interceptors'
                description = 'OpenTracing Contrib - Framework instrumentation for Jakarta EE Interceptors'
                url = 'https://github.com/opentracing-contrib/java-interceptors'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'jpkroehling'
                        name = 'Juraci Paixão Kröhling'
                        email = 'jpkroehling+opentracing-contrib-java-interceptors@redhat.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/opentracing-contrib/java-interceptors.git'
                    developerConnection = 'scm:git:ssh://git@github.com:opentracing-contrib/java-interceptors.git'
                    url = 'https://github.com/opentracing-contrib/java-interceptors'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = findProperty("sonatypeUsername")
                password = findProperty("sonatypePassword")
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}
